package problems;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 *
 */
public class Problem002 {

    private static int calculateFib(int n) {
        if (n <= 1) {
            return n;
        } else {
            return calculateFib(n-2) + calculateFib(n-1);
        }
    }
    
    public static int sumEvenFibNumbers(int upperLimit) {
        
        int total = 0;
        int current = 0;
        int counter = 1;
        
        while(current < upperLimit) {
            current = calculateFib(counter);
            
            if(isNumberEven(current)) {
                total += current;
            }
            counter++;
        }
        
        return total;
        
    }
    
    private static boolean isNumberEven(int x) {
        
        return (x%2==0) ? true : false;
        
    }
}
